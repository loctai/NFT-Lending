// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CovenantAccept extends ethereum.Event {
  get params(): CovenantAccept__Params {
    return new CovenantAccept__Params(this);
  }
}

export class CovenantAccept__Params {
  _event: CovenantAccept;

  constructor(event: CovenantAccept) {
    this._event = event;
  }

  get itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get nftContract(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get borrower(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get daysToRent(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get timeExpired(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class CovenantLiquidate extends ethereum.Event {
  get params(): CovenantLiquidate__Params {
    return new CovenantLiquidate__Params(this);
  }
}

export class CovenantLiquidate__Params {
  _event: CovenantLiquidate;

  constructor(event: CovenantLiquidate) {
    this._event = event;
  }

  get itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get nftContract(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CovenantListed extends ethereum.Event {
  get params(): CovenantListed__Params {
    return new CovenantListed__Params(this);
  }
}

export class CovenantListed__Params {
  _event: CovenantListed;

  constructor(event: CovenantListed) {
    this._event = event;
  }

  get itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get nftContract(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenAdr(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get priceBorrow(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get maxDays(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[7].value.toI32();
  }

  get borrower(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get lender(): Address {
    return this._event.parameters[9].value.toAddress();
  }
}

export class CovenantReturnNFT extends ethereum.Event {
  get params(): CovenantReturnNFT__Params {
    return new CovenantReturnNFT__Params(this);
  }
}

export class CovenantReturnNFT__Params {
  _event: CovenantReturnNFT;

  constructor(event: CovenantReturnNFT) {
    this._event = event;
  }

  get itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get nftContract(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CovenantUnlisted extends ethereum.Event {
  get params(): CovenantUnlisted__Params {
    return new CovenantUnlisted__Params(this);
  }
}

export class CovenantUnlisted__Params {
  _event: CovenantUnlisted;

  constructor(event: CovenantUnlisted) {
    this._event = event;
  }

  get itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get nftContract(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LoanNFT__idToCovenantResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: i32;
  value10: Address;
  value11: Address;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: i32,
    value10: Address,
    value11: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set(
      "value9",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value9))
    );
    map.set("value10", ethereum.Value.fromAddress(this.value10));
    map.set("value11", ethereum.Value.fromAddress(this.value11));
    return map;
  }

  getNftContract(): Address {
    return this.value0;
  }

  getTokenAdr(): Address {
    return this.value1;
  }

  getTokenId(): BigInt {
    return this.value2;
  }

  getPrice(): BigInt {
    return this.value3;
  }

  getPriceBorrow(): BigInt {
    return this.value4;
  }

  getMaxDays(): BigInt {
    return this.value5;
  }

  getTimeExpired(): BigInt {
    return this.value6;
  }

  getDaysBorrow(): BigInt {
    return this.value7;
  }

  getBorrowedAt(): BigInt {
    return this.value8;
  }

  getStatus(): i32 {
    return this.value9;
  }

  getBorrower(): Address {
    return this.value10;
  }

  getLender(): Address {
    return this.value11;
  }
}

export class LoanNFT extends ethereum.SmartContract {
  static bind(address: Address): LoanNFT {
    return new LoanNFT("LoanNFT", address);
  }

  ERC721INTERFACE(): Bytes {
    let result = super.call(
      "ERC721INTERFACE",
      "ERC721INTERFACE():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_ERC721INTERFACE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ERC721INTERFACE",
      "ERC721INTERFACE():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PERCENTS_DIVIDER(): BigInt {
    let result = super.call(
      "PERCENTS_DIVIDER",
      "PERCENTS_DIVIDER():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PERCENTS_DIVIDER(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PERCENTS_DIVIDER",
      "PERCENTS_DIVIDER():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentItemId(): BigInt {
    let result = super.call("currentItemId", "currentItemId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentItemId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentItemId",
      "currentItemId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feePerThousand(): BigInt {
    let result = super.call("feePerThousand", "feePerThousand():(uint256)", []);

    return result[0].toBigInt();
  }

  try_feePerThousand(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feePerThousand",
      "feePerThousand():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeReceiver(): Address {
    let result = super.call("feeReceiver", "feeReceiver():(address)", []);

    return result[0].toAddress();
  }

  try_feeReceiver(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeReceiver", "feeReceiver():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  idToCovenant(param0: BigInt): LoanNFT__idToCovenantResult {
    let result = super.call(
      "idToCovenant",
      "idToCovenant(uint256):(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint8,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new LoanNFT__idToCovenantResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toI32(),
      result[10].toAddress(),
      result[11].toAddress()
    );
  }

  try_idToCovenant(
    param0: BigInt
  ): ethereum.CallResult<LoanNFT__idToCovenantResult> {
    let result = super.tryCall(
      "idToCovenant",
      "idToCovenant(uint256):(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint8,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LoanNFT__idToCovenantResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toI32(),
        value[10].toAddress(),
        value[11].toAddress()
      )
    );
  }

  loanAccepted(param0: Address): BigInt {
    let result = super.call("loanAccepted", "loanAccepted(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_loanAccepted(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "loanAccepted",
      "loanAccepted(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  loanLiquidated(param0: Address): BigInt {
    let result = super.call(
      "loanLiquidated",
      "loanLiquidated(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_loanLiquidated(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "loanLiquidated",
      "loanLiquidated(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptCovenantCall extends ethereum.Call {
  get inputs(): AcceptCovenantCall__Inputs {
    return new AcceptCovenantCall__Inputs(this);
  }

  get outputs(): AcceptCovenantCall__Outputs {
    return new AcceptCovenantCall__Outputs(this);
  }
}

export class AcceptCovenantCall__Inputs {
  _call: AcceptCovenantCall;

  constructor(call: AcceptCovenantCall) {
    this._call = call;
  }

  get itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get daysToRent(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AcceptCovenantCall__Outputs {
  _call: AcceptCovenantCall;

  constructor(call: AcceptCovenantCall) {
    this._call = call;
  }
}

export class EndListedItemCall extends ethereum.Call {
  get inputs(): EndListedItemCall__Inputs {
    return new EndListedItemCall__Inputs(this);
  }

  get outputs(): EndListedItemCall__Outputs {
    return new EndListedItemCall__Outputs(this);
  }
}

export class EndListedItemCall__Inputs {
  _call: EndListedItemCall;

  constructor(call: EndListedItemCall) {
    this._call = call;
  }

  get itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EndListedItemCall__Outputs {
  _call: EndListedItemCall;

  constructor(call: EndListedItemCall) {
    this._call = call;
  }
}

export class LiquidateCall extends ethereum.Call {
  get inputs(): LiquidateCall__Inputs {
    return new LiquidateCall__Inputs(this);
  }

  get outputs(): LiquidateCall__Outputs {
    return new LiquidateCall__Outputs(this);
  }
}

export class LiquidateCall__Inputs {
  _call: LiquidateCall;

  constructor(call: LiquidateCall) {
    this._call = call;
  }

  get itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LiquidateCall__Outputs {
  _call: LiquidateCall;

  constructor(call: LiquidateCall) {
    this._call = call;
  }
}

export class ListCovenantCall extends ethereum.Call {
  get inputs(): ListCovenantCall__Inputs {
    return new ListCovenantCall__Inputs(this);
  }

  get outputs(): ListCovenantCall__Outputs {
    return new ListCovenantCall__Outputs(this);
  }
}

export class ListCovenantCall__Inputs {
  _call: ListCovenantCall;

  constructor(call: ListCovenantCall) {
    this._call = call;
  }

  get _nftContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _tokenAdr(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _price(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _priceBorrow(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _maxDays(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class ListCovenantCall__Outputs {
  _call: ListCovenantCall;

  constructor(call: ListCovenantCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ReturnNFTCall extends ethereum.Call {
  get inputs(): ReturnNFTCall__Inputs {
    return new ReturnNFTCall__Inputs(this);
  }

  get outputs(): ReturnNFTCall__Outputs {
    return new ReturnNFTCall__Outputs(this);
  }
}

export class ReturnNFTCall__Inputs {
  _call: ReturnNFTCall;

  constructor(call: ReturnNFTCall) {
    this._call = call;
  }

  get itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ReturnNFTCall__Outputs {
  _call: ReturnNFTCall;

  constructor(call: ReturnNFTCall) {
    this._call = call;
  }
}

export class SetFeePerThousandCall extends ethereum.Call {
  get inputs(): SetFeePerThousandCall__Inputs {
    return new SetFeePerThousandCall__Inputs(this);
  }

  get outputs(): SetFeePerThousandCall__Outputs {
    return new SetFeePerThousandCall__Outputs(this);
  }
}

export class SetFeePerThousandCall__Inputs {
  _call: SetFeePerThousandCall;

  constructor(call: SetFeePerThousandCall) {
    this._call = call;
  }

  get _newFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFeePerThousandCall__Outputs {
  _call: SetFeePerThousandCall;

  constructor(call: SetFeePerThousandCall) {
    this._call = call;
  }
}

export class SetFeeReceiverCall extends ethereum.Call {
  get inputs(): SetFeeReceiverCall__Inputs {
    return new SetFeeReceiverCall__Inputs(this);
  }

  get outputs(): SetFeeReceiverCall__Outputs {
    return new SetFeeReceiverCall__Outputs(this);
  }
}

export class SetFeeReceiverCall__Inputs {
  _call: SetFeeReceiverCall;

  constructor(call: SetFeeReceiverCall) {
    this._call = call;
  }

  get _feeReceiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeReceiverCall__Outputs {
  _call: SetFeeReceiverCall;

  constructor(call: SetFeeReceiverCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
